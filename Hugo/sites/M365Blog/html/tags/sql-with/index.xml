<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SQL With on m365 blog</title>
    <link>https://famous-cajeta-4dad83.netlify.app/tags/sql-with/</link>
    <description>Recent content in SQL With on m365 blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 20 Nov 2015 14:55:44 +0000</lastBuildDate><atom:link href="https://famous-cajeta-4dad83.netlify.app/tags/sql-with/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SQL With statement to return list of Months with date range</title>
      <link>https://famous-cajeta-4dad83.netlify.app/sql-with-statement-to-return-list-of-months-with-date-range/</link>
      <pubDate>Fri, 20 Nov 2015 14:55:44 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/sql-with-statement-to-return-list-of-months-with-date-range/</guid>
      <description>With temporary named result set, known as a common table expression (CTE). More information regarding With can be found from the link below https://msdn.microsoft.com/en-GB/library/ms175972.aspx I have a function that accept a start date and end date and return a list of months CREATE FUNCTION [dbo].[FN_Utility_GetMonths](@startDate DateTime, @EndDate DateTime) RETURNS @Months table (MonthYear nvarchar(25),StartDate DateTime) AS BEGIN ;With [Months] as ( select StartDate = @startDate where @startDate &amp;lt;= @endDate union all select dateadd(month, 1, StartDate) from [Months] M &amp;ndash;iterate through each row to get month benefit where dateadd(Month, 1, StartDate) &amp;lt;= @endDate ) INSERT INTO @Months select CONVERT(VARCHAR(3),StartDate,0) + &amp;lsquo;-&amp;rsquo; + RIGHT(0+YEAR(StartDate),2) ,StartDate from [Months] option (maxrecursion 0) RETURN END The function can be used against a list of rows from a table to break down start date and end date into range of months splitting for example cost information evenly using Apply statement Refer to the following post for more details http://wp.</description>
    </item>
    
  </channel>
</rss>
