<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CSOM on m365 blog</title>
    <link>https://famous-cajeta-4dad83.netlify.app/tags/csom/</link>
    <description>Recent content in CSOM on m365 blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 02 Nov 2016 20:43:35 +0000</lastBuildDate><atom:link href="https://famous-cajeta-4dad83.netlify.app/tags/csom/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using PnP PowerShell to export and import Taxonomy</title>
      <link>https://famous-cajeta-4dad83.netlify.app/using-pnp-powershell-to-export-and-import-taxonomy/</link>
      <pubDate>Wed, 02 Nov 2016 20:43:35 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/using-pnp-powershell-to-export-and-import-taxonomy/</guid>
      <description>PnP provides export taxonomy cmdlet which allows to export all term groups, term sets, terms and child terms to a file with one line of codeConnect-SPOnline -Url &amp;lt;siteurl&amp;gt; -CurrentCredentials Export-SPOTaxonomy -IncludeID -Path &amp;quot;C:\\temp\\Metadata\\terms.txt&amp;quot;PnP also provides an equivalent import taxonomy cmdlet to import all term groups, term sets, terms and child terms from a file with one line of codeConnect-SPOnline -Url &amp;lt;siteurl&amp;gt; -CurrentCredentials Import-SPOTaxonomy -Path &amp;quot;C:\\temp\\Metadata\\terms.txt&amp;quot;However if IncludeId switch parameter is used with the export, the import would fail if the October 2016 PnP PowerShell release is used.</description>
    </item>
    
    <item>
      <title>Instantiate SharePoint Client Context using current user credentials in PowerShell</title>
      <link>https://famous-cajeta-4dad83.netlify.app/instantiate-sharepoint-client-context-using-current-user-credentials-in-powershell-comments/</link>
      <pubDate>Wed, 02 Nov 2016 19:10:01 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/instantiate-sharepoint-client-context-using-current-user-credentials-in-powershell-comments/</guid>
      <description>M - Oct 2, 2017
The PnP cmdlets have been updated&amp;hellip; Connect-SPOnline -Url “http://dev-sp-001a:1214/Teams/Legal” -CurrentCredentials $ctx= Get-SPOContext Should now be: Connect-PnPOnline -Url “http://dev-sp-001a:1214/Teams/Legal” $ctx= Get-PnPContext Thanks for posting!</description>
    </item>
    
    <item>
      <title>Instantiate SharePoint Client Context using current user credentials in PowerShell</title>
      <link>https://famous-cajeta-4dad83.netlify.app/instantiate-sharepoint-client-context-using-current-user-credentials-in-powershell/</link>
      <pubDate>Wed, 02 Nov 2016 19:10:01 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/instantiate-sharepoint-client-context-using-current-user-credentials-in-powershell/</guid>
      <description>In C# managed code, SharePoint Client Context can be created using System.Net.CredentialCache to pass logged in user credentials.ICredentials credentials = CredentialCache.DefaultCredentials; clientContext.Credentials = credentials;I could not find anywhere how to achieve it in PowerShell. If using PnP PowerShell module, the switch parameter CurrentCredentials can be used with the cmdlet Connect-Online.Connect-SPOnline -Url “http://dev-sp-001a:1214/Teams/Legal” -CurrentCredentials $ctx= Get-SPOContextIn most of my CSOM code without use of PnP I used to get current user name using [Environment]::UserName[Environment]::UserNameI used to prompt the current user to enter password$AdminPassword = Read-Host &amp;quot;Enter password: &amp;quot; -AsSecureStringLately I discovered I could use system.</description>
    </item>
    
    <item>
      <title>Create Lists Libraries from Schema as XML using CSOM</title>
      <link>https://famous-cajeta-4dad83.netlify.app/create-lists-libraries-from-schema-as-xml-using-csom-comments/</link>
      <pubDate>Sat, 22 Oct 2016 09:48:35 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/create-lists-libraries-from-schema-as-xml-using-csom-comments/</guid>
      <description>Export Lists Schema to XML using CSOM and PnP | reshmeeauckloo - Oct 6, 2016
[…] To create lists/libraries using the XML config file, refer to post Create Lists Libraries from Schema as XML using CSOM […]</description>
    </item>
    
    <item>
      <title>Create Lists Libraries from Schema as XML using CSOM</title>
      <link>https://famous-cajeta-4dad83.netlify.app/create-lists-libraries-from-schema-as-xml-using-csom/</link>
      <pubDate>Sat, 22 Oct 2016 09:48:35 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/create-lists-libraries-from-schema-as-xml-using-csom/</guid>
      <description>Following on my article Export List Schema XML to a configuration file, I went on to create lists and libraries with same metadata on a new SharePoint environment. Although CSOM allows to create a list by update the property SchemaXML using CSOM iterating through the list schema in the config file. However I kept getting &amp;ldquo;Invalid list template&amp;rdquo;. The exported list&amp;rsquo;s Schema XML needs to be modified to remove unnecessary tags so as it can be used to update property SchemaXML as per article &amp;ldquo;How to create List and libraries with CustomSchemaXml property using SchemaXml with CSOM in SharePoint online2010?</description>
    </item>
    
    <item>
      <title>Export Lists Schema to XML using CSOM and PnP</title>
      <link>https://famous-cajeta-4dad83.netlify.app/export-lists-schema-to-xml-using-csom-and-pnp-comments/</link>
      <pubDate>Sat, 22 Oct 2016 09:36:01 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/export-lists-schema-to-xml-using-csom-and-pnp-comments/</guid>
      <description>Create Lists Libraries from Schema as XML using CSOM | reshmeeauckloo - Oct 6, 2016
[…] ← Export Lists Schema to XML using CSOM and PnP […]</description>
    </item>
    
    <item>
      <title>Export Lists Schema to XML using CSOM and PnP</title>
      <link>https://famous-cajeta-4dad83.netlify.app/export-lists-schema-to-xml-using-csom-and-pnp/</link>
      <pubDate>Sat, 22 Oct 2016 09:36:01 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/export-lists-schema-to-xml-using-csom-and-pnp/</guid>
      <description>I had to automate deployment of lists and libraries into different environments, e.g. on premises and online. There are different elements to consider when deploying lists or libraries namely - List Properties - List Content Types - Views - Fields I could have written a configuration file in xml manually to specify the details above. Instead I have decided to configure lists and libraries from a SharePoint 2013 On Premises Dev environment and export the list schemaXML property to a XML file.</description>
    </item>
    
    <item>
      <title>Update Search Result Web Part: Query Text and Result Source</title>
      <link>https://famous-cajeta-4dad83.netlify.app/update-search-result-web-part-query-text-and-result-source/</link>
      <pubDate>Sat, 15 Oct 2016 08:17:28 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/update-search-result-web-part-query-text-and-result-source/</guid>
      <description>I had to automate update of result source and query of a search result web part in a search page as part of deployment script to move changes from DEV to TEST, UAT and PROD. The XML definition of a search result web part is Cannot import this Web Part. 4 True advanced.aspx True False True True True null False True [&amp;quot;~sitecollection/_catalogs/masterpage/Display Templates/Search/Group_Default.js&amp;quot;,&amp;quot;~sitecollection/_catalogs/masterpage/Display Templates/Search/Item_Default.js&amp;quot;,&amp;quot;~sitecollection/_catalogs/masterpage/Display Templates/Search/Item_Site.js&amp;quot;,&amp;quot;~sitecollection/_catalogs/masterpage/Display Templates/Search/Item_Word.js&amp;quot;,&amp;quot;~sitecollection/_catalogs/masterpage/Display Templates/Search/Item_PowerPoint.js&amp;quot;,&amp;quot;~sitecollection/_catalogs/masterpage/Display Templates/Search/Item_Person_CompactHorizontal.js&amp;quot;,&amp;quot;~sitecollection/_catalogs/masterpage/Display Templates/Search/Item_BestBet.js&amp;quot;,&amp;quot;~sitecollection/_catalogs/masterpage/Display Templates/Search/Item_WebPage.js&amp;quot;] 10 True True False True True Modeless Search Results True 1 True False ~sitecollection/_catalogs/masterpage/Display Templates/Search/Item_CommonItem_Body.</description>
    </item>
    
    <item>
      <title>Add Refiner to Refinement Web Part using CSOM and PowerShell</title>
      <link>https://famous-cajeta-4dad83.netlify.app/add-refiner-to-refinement-web-part-comments/</link>
      <pubDate>Wed, 05 Oct 2016 06:06:13 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/add-refiner-to-refinement-web-part-comments/</guid>
      <description>Update Search Result Web Part: Query Text and Result Source | reshmeeauckloo - Oct 6, 2016
[…] ← Add Refiner to Refinement Web Part using CSOM and PowerShell […]</description>
    </item>
    
    <item>
      <title>Add Refiner to Refinement Web Part using CSOM and PowerShell</title>
      <link>https://famous-cajeta-4dad83.netlify.app/add-refiner-to-refinement-web-part/</link>
      <pubDate>Wed, 05 Oct 2016 06:06:13 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/add-refiner-to-refinement-web-part/</guid>
      <description>The refinement web part present by default on a search results page help to narrow down search results. The inter connected web parts present in a search result page are
Search Box Web Part Search Navigation Search Results Refinement Web Part The refinement web part used refiners which are managed properties bound to crawled properties created by search crawl. The managed properties must be enabled as refiners to be able to use on the web part.</description>
    </item>
    
    <item>
      <title>Create default groups using CSOM and PowerShell after creating site collections via script</title>
      <link>https://famous-cajeta-4dad83.netlify.app/create-default-groups-using-csom-and-powershell-after-creating-site-collections-via-script/</link>
      <pubDate>Mon, 03 Oct 2016 16:13:28 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/create-default-groups-using-csom-and-powershell-after-creating-site-collections-via-script/</guid>
      <description>Whenever a site collection is created using PowerShell, the default security groups (visitors, owners and members) are not provisioned. When site collection is created via browser an additional method call is made to create the security groups which is not called while using PowerShell.
The following scripts will help create the default groups.
https://gist.github.com/reshmee011/7c4ac90cb3038d16fa1448f4c5678896 Call method CreateWebDefaultGroup passing the parameters context(clientcontext) and UniquePermissions(bool) CreateWebDefaultGroup -Context $ctx -UniquePermissions $false</description>
    </item>
    
    <item>
      <title>Export Term Set from Term Store as Sample Import file CSV</title>
      <link>https://famous-cajeta-4dad83.netlify.app/export-term-set-from-term-store-as-sample-import-file-csv/</link>
      <pubDate>Tue, 06 Sep 2016 16:28:32 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/export-term-set-from-term-store-as-sample-import-file-csv/</guid>
      <description>The Managed Metadata service provides the &amp;ldquo;Import Term Set&amp;rdquo; Out of the Box. Unfortunately it does not provide the same &amp;ldquo;Export Term Set&amp;rdquo; capability. I had a requirement to export a term set to be reviewed by the business before importing the term set to another SharePoint farm. The Sample Import File has the columns &amp;ldquo;Term Set Name&amp;rdquo;,&amp;ldquo;Term Set Description&amp;rdquo;,&amp;ldquo;LCID&amp;rdquo;,&amp;ldquo;Available for Tagging&amp;rdquo;,&amp;ldquo;Term Description&amp;rdquo;,&amp;ldquo;Level 1 Term&amp;rdquo;,&amp;ldquo;Level 2 Term&amp;rdquo;,&amp;ldquo;Level 3 Term&amp;rdquo;,&amp;ldquo;Level 4 Term&amp;rdquo;,&amp;ldquo;Level 5 Term&amp;rdquo;,&amp;ldquo;Level 6 Term&amp;rdquo; and &amp;ldquo;Level 7 Term&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Apply Theme and Create Composed Look CSOM and PowerShell</title>
      <link>https://famous-cajeta-4dad83.netlify.app/apply-theme-and-create-composed-look-csom-and-powershell/</link>
      <pubDate>Tue, 30 Aug 2016 16:27:50 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/apply-theme-and-create-composed-look-csom-and-powershell/</guid>
      <description>There are several ways a theme can be applied to a SharePoint site. I tried the PnP command SetSPOTheme as follows on SharePoint 2013 On Premises instance. Set-SPOTheme -ColorPaletteUrl $PathThemeColor -FontSchemeUrl $PathThemeFont Unfortunately I was getting message &amp;lsquo;Field or property &amp;ldquo;AlternateCssUrl&amp;rdquo; does not exist.&amp;rsquo; The error is due not having latest patch installed. Unfortunately the latest SharePoint CU can&amp;rsquo;t be installed as we have heavily customised legacy applications migrated from SharePoint 2007 and SharePoint 2010 running in compatibility mode.</description>
    </item>
    
    <item>
      <title>Metalogix Import From FileShare To SharePoint - Extract Folder Name from FilePath using CSOM PnP</title>
      <link>https://famous-cajeta-4dad83.netlify.app/metalogix-import-from-fileshare-to-sharepoint-extract-folder-name-from-filepath-using-csom-pnp/</link>
      <pubDate>Fri, 26 Aug 2016 21:05:05 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/metalogix-import-from-fileshare-to-sharepoint-extract-folder-name-from-filepath-using-csom-pnp/</guid>
      <description>I was evaluating the Metalogix tool for Migration from fileshare to SharePoint. The file share edition needs to be selected while installing the Metalogix content matrix tool. The good news is that it can fulfil the following requirements:
Migrate files recursively from within folders , i.e. flatten folder Replace illegal characters with character specified Handle duplicate by either overwriting file or not moving file The CreatedBy, CreatedDate, ModifedBy and ModifiedDate file properties can be maintained by mapping these properties to SharePoint respective Out of the Box columns Can apply custom filter on the following Created Before Created After Modified Before Modified After File Size Max Can migrate user permission as set on the folder/file from fileShare to SharePoint, however I could not find option how to map to SharePoint Groups.</description>
    </item>
    
    <item>
      <title>Update Choice Field values using CSOM in PowerShell</title>
      <link>https://famous-cajeta-4dad83.netlify.app/update-choice-field-values-using-csom-in-powershell-comments/</link>
      <pubDate>Wed, 13 Jul 2016 16:55:32 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/update-choice-field-values-using-csom-in-powershell-comments/</guid>
      <description>Chris O&amp;rsquo;Connor - Oct 5, 2017
Thanks !! This was an awesome tip - and works in SharePoint Online. I have an &amp;ldquo;Events&amp;rdquo; list to clear out - and just add PUBLIC + PRIVATE. This technique worked great - thanks again. :-)
http://veerainduvasi.blogspot.co.uk/2017/01/update-exisiting-choice-column-options.html
Awesome! AND timely! Two questions: Will this work against a Sharepoint Online doc library with more than 5000 items? Can this alter an existing choice value as well as adding a new one?</description>
    </item>
    
    <item>
      <title>Update Choice Field values using CSOM in PowerShell</title>
      <link>https://famous-cajeta-4dad83.netlify.app/update-choice-field-values-using-csom-in-powershell/</link>
      <pubDate>Wed, 13 Jul 2016 16:55:32 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/update-choice-field-values-using-csom-in-powershell/</guid>
      <description>I wanted a CSOM script in PowerShell to add a new value to a choice field in SharePoint. Most of the examples I found were in CSOM Managed Code (C#) but could not find anything in PowerShell. I came up with the embedded code. The client assemblies are referenced
SharePoint Assemblies\Microsoft.SharePoint.Client.dll SharePoint Assemblies\Microsoft.SharePoint.Client.Runtime.dll I have created the function Add-ChoiceValueToField to contain the logic to add a value to a choice field.</description>
    </item>
    
    <item>
      <title>CSOM in PowerShell Query All Unique Permissions</title>
      <link>https://famous-cajeta-4dad83.netlify.app/csom-query-all-unique-permissions/</link>
      <pubDate>Wed, 22 Jun 2016 20:45:10 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/csom-query-all-unique-permissions/</guid>
      <description>I was looking for a script to export all unique permissions/broken permissions for sites, lists or document libraries and Pages items.From a quick Google search, I stumbled upon SharePoint 2010: Export All Unique Permissions from Site Collection using PowerShell. The script would have worked on SharePoint 2013 given it was run directly from the SharePoint server using Server Side Code. I was site collection administrator without access to any SharePoint Servers.</description>
    </item>
    
    <item>
      <title>JSOM SharePoint Online Create Term with custom shared and local properties</title>
      <link>https://famous-cajeta-4dad83.netlify.app/jsom-sharepoint-online-create-term-with-custom-shared-and-local-properties/</link>
      <pubDate>Fri, 15 Apr 2016 21:14:04 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/jsom-sharepoint-online-create-term-with-custom-shared-and-local-properties/</guid>
      <description>The sp.Taxonomy.js can be used to create a term in the taxonomy store. I wanted to create Shared Custom properties on the term. However the JavaScript library on MSDN mentions only the method setLocalCustomProperty which creates or updates a local custom property. The SetCustomProperty is mentioned in MSDN to use in CSOM managed code to create or update shared custom property on a term. There is a lack of documentation how to use the method in JSOM.</description>
    </item>
    
    <item>
      <title>SharePoint JSOM to update Document ID Settings</title>
      <link>https://famous-cajeta-4dad83.netlify.app/sharepoint-jsom-to-update-document-id-settings/</link>
      <pubDate>Fri, 15 Apr 2016 05:42:48 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/sharepoint-jsom-to-update-document-id-settings/</guid>
      <description>The Document ID Service feature is useful to tag unique Id to documents across site collection to make it easier to retrieve. A prefix can be specified to use when the unique Id is generated. The document id settings is stored in the web property bag &amp;ldquo;docid_settings_ui&amp;rdquo; after the feature the activated. The web property bag can be updated using JSOM to assign a prefix with XML snippet like below. var docIdValue = &amp;lsquo; &amp;rsquo; + docIDPrefix + &amp;lsquo; true&amp;rsquo; webProperties.</description>
    </item>
    
    <item>
      <title>SharePoint 2013: How to increase the file upload limit for CSOM from 2 Mb to 20 Mb</title>
      <link>https://famous-cajeta-4dad83.netlify.app/sharepoint-2013-how-to-increase-the-file-upload-limit-for-csom-from-2-mb-to-20-mb-comments/</link>
      <pubDate>Tue, 23 Feb 2016 21:26:24 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/sharepoint-2013-how-to-increase-the-file-upload-limit-for-csom-from-2-mb-to-20-mb-comments/</guid>
      <description>FLEURY Romain (@radjkill) - Mar 2, 2016
Great !!</description>
    </item>
    
    <item>
      <title>SharePoint 2013: How to increase the file upload limit for CSOM from 2 Mb to 20 Mb</title>
      <link>https://famous-cajeta-4dad83.netlify.app/sharepoint-2013-how-to-increase-the-file-upload-limit-for-csom-from-2-mb-to-20-mb/</link>
      <pubDate>Tue, 23 Feb 2016 21:26:24 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/sharepoint-2013-how-to-increase-the-file-upload-limit-for-csom-from-2-mb-to-20-mb/</guid>
      <description>In SharePoint 2013, the default file size limit set in Central Administration is for uploading single file manually in SharePoint libraries or using server side code. When I was trying to upload a file more than 2 MB using CSOM, the following error was thrown The request message is too large. The server does not allow messages that are larger than 2097152 bytes. I tried the fix mentioned in the post http://sharepoint.</description>
    </item>
    
    <item>
      <title>CSOM SharePoint Update Created Field of InfoPath file in Document Library</title>
      <link>https://famous-cajeta-4dad83.netlify.app/csom-sharepoint-update-created-field-of-infopath-file-in-document-library/</link>
      <pubDate>Wed, 09 Dec 2015 11:08:46 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/csom-sharepoint-update-created-field-of-infopath-file-in-document-library/</guid>
      <description>While doing a bulk import of InfoPath documents into document library using a CSV file the &amp;ldquo;Created&amp;rdquo; list out of the box date field is set to today&amp;rsquo;s date and time. The &amp;ldquo;Created&amp;rdquo; date needed to be set to another date property &amp;ldquo;Date Raised&amp;rdquo;. The InfoPath form can be uploaded following the steps described in the post https://reshmeeauckloo.wordpress.com/2015/11/26/programmatically-create-infopath-form-using-csom-sharepoint-2010/ The InfoPath item can be retrieved specifying the URL of the file and field &amp;ldquo;Created&amp;rdquo; set to another date.</description>
    </item>
    
    <item>
      <title>SharePoint 2013/Online CSOM REST Web Proxy</title>
      <link>https://famous-cajeta-4dad83.netlify.app/sharepoint-2013-csom-rest-web-proxy-comments/</link>
      <pubDate>Fri, 04 Dec 2015 00:01:11 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/sharepoint-2013-csom-rest-web-proxy-comments/</guid>
      <description>parthrawal - Jun 5, 2016
can you please share the code for POST method!? i have currently JS in content editor webpart and want to use the same. can i!?
Could you please share code snippet for post data</description>
    </item>
    
    <item>
      <title>SharePoint 2013/Online CSOM REST Web Proxy</title>
      <link>https://famous-cajeta-4dad83.netlify.app/sharepoint-2013-csom-rest-web-proxy/</link>
      <pubDate>Fri, 04 Dec 2015 00:01:11 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/sharepoint-2013-csom-rest-web-proxy/</guid>
      <description>Web Proxy SP.WebProxy is used to make requests to external services by SharePoint. SharePoint Add-ins must register target site as remote endpoint in app manifest. If the URL is http://services.odata.org/v4/Northwind/Northwind.svc/Categories?$format=json, the endpoint is http://services.odata.org. However the response size must not exceed 200 kb. CSOM var context = SP.ClientContext.get_current(); var request = new SP.WebRequestInfo(); request.set_url(&amp;quot;http://services.odata.org/v4/Northwind/Northwind.svc/Categories?$format=json&amp;quot;); request.set_method(&amp;quot;GET&amp;quot;); var response = SP.WebProxy.invoke(context,request); context.executeQueryAsync(success, fail); function success(){ if(response.get_statusCode() == 200 { var data = JSON.</description>
    </item>
    
    <item>
      <title>Programmatically create InfoPath form using CSOM SharePoint 2010</title>
      <link>https://famous-cajeta-4dad83.netlify.app/programmatically-create-infopath-form-using-csom-sharepoint-2010-comments/</link>
      <pubDate>Thu, 26 Nov 2015 00:14:13 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/programmatically-create-infopath-form-using-csom-sharepoint-2010-comments/</guid>
      <description>CSOM SharePoint Update Created Field of InfoPath file in Document Library | reshmeeauckloo - Dec 3, 2015
[…] https://reshmeeauckloo.wordpress.com/2015/11/26/programmatically-create-infopath-form-using-csom-sha… […]</description>
    </item>
    
    <item>
      <title>Programmatically create InfoPath form using CSOM SharePoint 2010</title>
      <link>https://famous-cajeta-4dad83.netlify.app/programmatically-create-infopath-form-using-csom-sharepoint-2010/</link>
      <pubDate>Thu, 26 Nov 2015 00:14:13 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/programmatically-create-infopath-form-using-csom-sharepoint-2010/</guid>
      <description>The blog posts below describe how to create InfoPath form instance using server side code and the class InfopathFormGrocker http://platinumdogs.me/2010/09/02/sharepoint-programmatically-creating-infopath-form-instance-documents-part-2-of-2/ http://platinumdogs.me/2010/07/28/sharepoint-programmatically-creating-infopath-form-instance-documents-1-of-2/ To use CSOM the application has to be modified as follows 1. Add the following assemblies Microsoft.SharePoint.Client.dll Microsoft.SharePoint.Runtime.dll 2. Get the InfoPath file from the content type var clientContext = new ClientContext(siteUrl); var list = clientContext.Web.Lists.GetByTitle(listName); //get list level content type using ContentTypeExtensions var listContentType = clientContext.Web.Lists.GetByTitle(listName).ContentTypes.GetByName(listContentTypeName); var fileInfo = Microsoft.</description>
    </item>
    
    <item>
      <title>Updating Resources Custom Field values using CSOM, Project Online, #Project Server 2013</title>
      <link>https://famous-cajeta-4dad83.netlify.app/updating-resources-custom-field-values-using-csom-project-online-project-server-2013-comments/</link>
      <pubDate>Wed, 18 Nov 2015 18:05:30 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/updating-resources-custom-field-values-using-csom-project-online-project-server-2013-comments/</guid>
      <description>anil - May 5, 2016
You can update custom field using csom. Follow the link below http://projectservercode.com/tag/how-to-update-custom-field-using-csom/
Hi Anil. i am getting below error, can you please suggest me if there are any other way to fix it. projContext.ExecuteQuery(); An unhandled exception of type &amp;lsquo;Microsoft.SharePoint.Client.ServerException&amp;rsquo; occurred in Microsoft.SharePoint.Client.Runtime.dll Additional information: PJClientCallableException: CustomFieldRequiredValueNotProvided Below is my code. static string UserName = &amp;ldquo;raghava@hosting.com&amp;rdquo;; static string Passwords = &amp;ldquo;password&amp;rdquo;; static void Main(string[] args) { string pwaPath = &amp;ldquo;https://epmsolutions.</description>
    </item>
    
    <item>
      <title>Updating Resources Custom Field values using CSOM, Project Online, #Project Server 2013</title>
      <link>https://famous-cajeta-4dad83.netlify.app/updating-resources-custom-field-values-using-csom-project-online-project-server-2013/</link>
      <pubDate>Wed, 18 Nov 2015 18:05:30 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/updating-resources-custom-field-values-using-csom-project-online-project-server-2013/</guid>
      <description>Project Online applications need to be written using CSOM or OData rather the PSI which will be deprecated soon. The CSOM - Client-side object model implements common server functionality. If you are not familiar with development in Project Server 2013 refer to the links below to learn about CSOM, OData, JSOM. ProjectData - Project 2013 OData service reference https://msdn.microsoft.com/en-us/library/office/jj163015(v=office.15).aspx Client-side object model (CSOM) for Project 2013 https://msdn.microsoft.com/en-us/library/office/jj163123(v=office.15).aspx What the CSOM does and does not do https://msdn.</description>
    </item>
    
    <item>
      <title>SharePoint Get list items and Effective Permissions on a list via REST API from SharePoint Add-in</title>
      <link>https://famous-cajeta-4dad83.netlify.app/sharepoint-get-list-items-and-effective-permissions-on-a-list-via-rest-api-from-sharepoint-add-in-comments/</link>
      <pubDate>Mon, 16 Nov 2015 09:41:59 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/sharepoint-get-list-items-and-effective-permissions-on-a-list-via-rest-api-from-sharepoint-add-in-comments/</guid>
      <description>Ofer Gal - Mar 3, 2017
I get error: Uncaught (in promise) TypeError: SP.BasePermissions is not a constructor What else should I load?
Sp.js needs to be loaded. Add the following to your page. /_layouts/15/sp.runtime.js /_layouts/15/sp.js</description>
    </item>
    
    <item>
      <title>SharePoint Get list items and Effective Permissions on a list via REST API from SharePoint Add-in</title>
      <link>https://famous-cajeta-4dad83.netlify.app/sharepoint-get-list-items-and-effective-permissions-on-a-list-via-rest-api-from-sharepoint-add-in/</link>
      <pubDate>Mon, 16 Nov 2015 09:41:59 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/sharepoint-get-list-items-and-effective-permissions-on-a-list-via-rest-api-from-sharepoint-add-in/</guid>
      <description>The requirement was to build a SharePoint hosted Add-in to allow logged user to create/edit list item from any site from the site collection. The permissions of the user to be able to create/edit an item against the list needed to be checked. The following script gets list items with effective permissions against the list using jQuery promises from the SharePoint hosted Add-in function getListItemsAndPermissions(webUrl, listTitle) { var appWebUrl = decodeURIComponent(getQueryStringParameter(&amp;quot;SPAppWebUrl&amp;quot;)); var deferredPermissions = $.</description>
    </item>
    
    <item>
      <title>REST or CSOM with JavaScript to find if user is in particular SharePoint group</title>
      <link>https://famous-cajeta-4dad83.netlify.app/rest-or-csom-with-javascript-to-find-if-user-is-in-particular-sharepoint-group/</link>
      <pubDate>Fri, 19 Sep 2014 15:49:31 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/rest-or-csom-with-javascript-to-find-if-user-is-in-particular-sharepoint-group/</guid>
      <description>Initially I used REST call to find out whether the user is in a particular SharePoint group in SharePoint 2013. Though it works fine when the logged in user is an administrator or part of the queried group, the rest call to /_api/web/sitegroups/getbyid(xx)/users keeps prompting for user name and password for non-administrator users throwing access denied exception at the end. After a while investigating, I could not find anything to resolve the rest call issue and I decided to find to alternatives way to find out if the user is in a particular group.</description>
    </item>
    
  </channel>
</rss>
