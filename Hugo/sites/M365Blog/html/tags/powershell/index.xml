<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PowerShell on m365 blog</title>
    <link>https://famous-cajeta-4dad83.netlify.app/tags/powershell/</link>
    <description>Recent content in PowerShell on m365 blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 08 Mar 2017 22:39:41 +0000</lastBuildDate><atom:link href="https://famous-cajeta-4dad83.netlify.app/tags/powershell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SQL script batch execution using sqlcmd in PowerShell</title>
      <link>https://famous-cajeta-4dad83.netlify.app/sql-script-batch-execution-using-sqlcmd-in-powershell-comments/</link>
      <pubDate>Wed, 08 Mar 2017 22:39:41 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/sql-script-batch-execution-using-sqlcmd-in-powershell-comments/</guid>
      <description>reshmee011 - May 1, 2017
Definitely you can without a manifest file. If you want the scripts to run in some order, you can append a numerical number to the script file. Let me know if you need a sample code.
This example is great. Really helped me understand a few more things about PowerShell. But is it possible to do the same thing without using a manifest file (i.</description>
    </item>
    
    <item>
      <title>SQL script batch execution using sqlcmd in PowerShell</title>
      <link>https://famous-cajeta-4dad83.netlify.app/sql-script-batch-execution-using-sqlcmd-in-powershell/</link>
      <pubDate>Wed, 08 Mar 2017 22:39:41 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/sql-script-batch-execution-using-sqlcmd-in-powershell/</guid>
      <description>There is often a mismatch between needs of the development team (multiple discreet T-SQL files for separate concerns) and the release team (the requirement for one step automated deployment) . The script bridges the requirement by using sqlcmd.exe to run a batch of SQL scripts. A text file is used listing all sql files that need to run in a particular order to avoid errors which may occur if there are dependencies between the scripts.</description>
    </item>
    
    <item>
      <title>Create DevTest Labs in Azure</title>
      <link>https://famous-cajeta-4dad83.netlify.app/create-devtest-labs-in-azure/</link>
      <pubDate>Wed, 11 Jan 2017 08:28:58 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/create-devtest-labs-in-azure/</guid>
      <description>Azure DevTest Labs is available in UK South and UK West as from December 2016, in addition to the other 21 regions it has supported. The steps to create the DevTest lab are
Login to Azure portal as administrator Click the green + New menu Type DevTest Labs into the search box Select DevTestLabs from the results page Click on Create from the Description page. The advantages using DevTest Labs as mentioned from the Description page are DevTest Labs helps developers and testers to quickly create virtual machines in Azure to deploy and test their applications.</description>
    </item>
    
    <item>
      <title>Create Dev/Test SharePoint 2013 environment in Azure</title>
      <link>https://famous-cajeta-4dad83.netlify.app/create-devtest-sharepoint-2013-environment-in-azure-comments/</link>
      <pubDate>Tue, 06 Dec 2016 11:49:22 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/create-devtest-sharepoint-2013-environment-in-azure-comments/</guid>
      <description>Create Dev/Test SharePoint 2013 environment in Azure — reshmeeauckloo – SutoCom Solutions - Dec 2, 2016
[…] via Create Dev/Test SharePoint 2013 environment in Azure — reshmeeauckloo […]</description>
    </item>
    
    <item>
      <title>Create Dev/Test SharePoint 2013 environment in Azure</title>
      <link>https://famous-cajeta-4dad83.netlify.app/create-devtest-sharepoint-2013-environment-in-azure/</link>
      <pubDate>Tue, 06 Dec 2016 11:49:22 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/create-devtest-sharepoint-2013-environment-in-azure/</guid>
      <description>Azure has a trial image to build either SharePoint 2013 HA farm or SharePoint 2013 Non-HA farm.
When trying to create SharePoint 2013 Non-HA farm, I was stuck at step &amp;ldquo;Choose storage account type&amp;rdquo; with the message &amp;ldquo;Loading pricing&amp;hellip;&amp;rdquo;.
Following SharePoint Server 2016 dev/test environment in Azure, I managed to created a SharePoint 2013 environment in Azure running PowerShell commands.
There are three major phases to setting up this dev/test environment:</description>
    </item>
    
    <item>
      <title>Import Configuration Data to CRM using Microsoft.Xrm.Data.PowerShell</title>
      <link>https://famous-cajeta-4dad83.netlify.app/import-configuration-data-to-crm-using-microsoft-xrm-data-powershell-comments/</link>
      <pubDate>Thu, 24 Nov 2016 17:42:09 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/import-configuration-data-to-crm-using-microsoft-xrm-data-powershell-comments/</guid>
      <description>nongtingtihurgcon - Feb 1, 2017
I conceive other website proprietors should take this internet site as an model, very clean and good user pleasant style .</description>
    </item>
    
    <item>
      <title>Import Configuration Data to CRM using Microsoft.Xrm.Data.PowerShell</title>
      <link>https://famous-cajeta-4dad83.netlify.app/import-configuration-data-to-crm-using-microsoft-xrm-data-powershell/</link>
      <pubDate>Thu, 24 Nov 2016 17:42:09 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/import-configuration-data-to-crm-using-microsoft-xrm-data-powershell/</guid>
      <description>CRM Dynamics data can be exported using the data migration tool by first generating the data schema file and using the later to export selected entities and fields. The same data migration tool can be used to import data into other environments. However it is still a manual process. I have written a script using Microsoft.Xrm.Data.PowerShell module in PowerShell to automate the data import. The zip generated by the export needs to be unzipped so that the path of the files can be passed to the method called to import the data.</description>
    </item>
    
    <item>
      <title>Create Virtual Machine(VM) in Azure throws &#34;Long running operation failed with status &#39;Failed&#39;.&#34; through PowerShell</title>
      <link>https://famous-cajeta-4dad83.netlify.app/create-virtual-machinevm-in-azure-throws-long-running-operation-failed-with-status-failed-through-powershell/</link>
      <pubDate>Fri, 18 Nov 2016 17:25:22 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/create-virtual-machinevm-in-azure-throws-long-running-operation-failed-with-status-failed-through-powershell/</guid>
      <description>I was following the article SharePoint Server 2016 dev/test environment in Azure to create a SharePoint Server 2016 environment in Azure. I reached the step to create the Virtual Machine that will be used as the domain controller using the cmdlet below``` New-AzureRMVM -ResourceGroupName $rgName -Location $locName -VM $vm
After waiting for several minutes I decided to cancel the operation. When I retried the same cmdlet, I got the following error.</description>
    </item>
    
    <item>
      <title>Create Azure Virtual Network throws  Error &#34;Subscription is not registered with NRP&#34;</title>
      <link>https://famous-cajeta-4dad83.netlify.app/create-azure-virtual-network-throws-error-subscription-is-not-registered-with-nrp-comments/</link>
      <pubDate>Fri, 18 Nov 2016 15:48:19 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/create-azure-virtual-network-throws-error-subscription-is-not-registered-with-nrp-comments/</guid>
      <description>JohnF - Sep 1, 2019
Thanks for saving me the time!</description>
    </item>
    
    <item>
      <title>Create Azure Virtual Network throws  Error &#34;Subscription is not registered with NRP&#34;</title>
      <link>https://famous-cajeta-4dad83.netlify.app/create-azure-virtual-network-throws-error-subscription-is-not-registered-with-nrp/</link>
      <pubDate>Fri, 18 Nov 2016 15:48:19 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/create-azure-virtual-network-throws-error-subscription-is-not-registered-with-nrp/</guid>
      <description>I was following the article SharePoint Server 2016 dev/test environment in Azure to create a SharePoint Server 2016 environment in Azure. I reached the step to create the SP2016Vnet Azure Virtual Network that will host the SP2016Subnet subnet. I tried the cmdlets below``` $spSubnet=New-AzureRMVirtualNetworkSubnetConfig -Name SP2016Subnet -AddressPrefix 10.0.0.0/24
New-AzureRMVirtualNetwork -Name SP2016Vnet -ResourceGroupName $rgName -Location $locName -AddressPrefix 10.0.0.0/16 -Subnet $spSubnet -DNSServer 10.0.0.4 Unfortunately I got the error message WARNING: The output object type of this cmdlet will be modified in a future release.</description>
    </item>
    
    <item>
      <title>Instantiate CRMServiceClient using current user&#39;s login</title>
      <link>https://famous-cajeta-4dad83.netlify.app/instantiate-crmserviceclient-using-current-users-login/</link>
      <pubDate>Thu, 10 Nov 2016 18:12:33 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/instantiate-crmserviceclient-using-current-users-login/</guid>
      <description>TheGet-CrmConnection method can be used to return connection to a CRM instance. The syntax to call the method is``` Parameter Set: OnLine Get-CrmConnection [-OnLineType] [[-Credential] ] [-DeploymentRegion] [[-ProfileName] ] -OrganizationName [ ]
Parameter Set: OnPrem Get-CrmConnection [-ServerUrl] [[-Credential] ] [-OrganizationName] [[-HomeRealmUrl] ] [[-ProfileName] ] [ ]
Parameter Set: UIOnly Get-CrmConnection [[-InteractiveMode]] [ ] I wanted to get the crm connection with the current user&#39;s credentials without any prompts. [The first and second options required the object PSCredential which can&#39;t be created using logged current user&#39;s credentials](http://stackoverflow.</description>
    </item>
    
    <item>
      <title>Using PnP PowerShell to export and import Taxonomy</title>
      <link>https://famous-cajeta-4dad83.netlify.app/using-pnp-powershell-to-export-and-import-taxonomy/</link>
      <pubDate>Wed, 02 Nov 2016 20:43:35 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/using-pnp-powershell-to-export-and-import-taxonomy/</guid>
      <description>PnP provides export taxonomy cmdlet which allows to export all term groups, term sets, terms and child terms to a file with one line of codeConnect-SPOnline -Url &amp;lt;siteurl&amp;gt; -CurrentCredentials Export-SPOTaxonomy -IncludeID -Path &amp;quot;C:\\temp\\Metadata\\terms.txt&amp;quot;PnP also provides an equivalent import taxonomy cmdlet to import all term groups, term sets, terms and child terms from a file with one line of codeConnect-SPOnline -Url &amp;lt;siteurl&amp;gt; -CurrentCredentials Import-SPOTaxonomy -Path &amp;quot;C:\\temp\\Metadata\\terms.txt&amp;quot;However if IncludeId switch parameter is used with the export, the import would fail if the October 2016 PnP PowerShell release is used.</description>
    </item>
    
    <item>
      <title>Instantiate SharePoint Client Context using current user credentials in PowerShell</title>
      <link>https://famous-cajeta-4dad83.netlify.app/instantiate-sharepoint-client-context-using-current-user-credentials-in-powershell-comments/</link>
      <pubDate>Wed, 02 Nov 2016 19:10:01 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/instantiate-sharepoint-client-context-using-current-user-credentials-in-powershell-comments/</guid>
      <description>M - Oct 2, 2017
The PnP cmdlets have been updated&amp;hellip; Connect-SPOnline -Url “http://dev-sp-001a:1214/Teams/Legal” -CurrentCredentials $ctx= Get-SPOContext Should now be: Connect-PnPOnline -Url “http://dev-sp-001a:1214/Teams/Legal” $ctx= Get-PnPContext Thanks for posting!</description>
    </item>
    
    <item>
      <title>Instantiate SharePoint Client Context using current user credentials in PowerShell</title>
      <link>https://famous-cajeta-4dad83.netlify.app/instantiate-sharepoint-client-context-using-current-user-credentials-in-powershell/</link>
      <pubDate>Wed, 02 Nov 2016 19:10:01 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/instantiate-sharepoint-client-context-using-current-user-credentials-in-powershell/</guid>
      <description>In C# managed code, SharePoint Client Context can be created using System.Net.CredentialCache to pass logged in user credentials.ICredentials credentials = CredentialCache.DefaultCredentials; clientContext.Credentials = credentials;I could not find anywhere how to achieve it in PowerShell. If using PnP PowerShell module, the switch parameter CurrentCredentials can be used with the cmdlet Connect-Online.Connect-SPOnline -Url “http://dev-sp-001a:1214/Teams/Legal” -CurrentCredentials $ctx= Get-SPOContextIn most of my CSOM code without use of PnP I used to get current user name using [Environment]::UserName[Environment]::UserNameI used to prompt the current user to enter password$AdminPassword = Read-Host &amp;quot;Enter password: &amp;quot; -AsSecureStringLately I discovered I could use system.</description>
    </item>
    
    <item>
      <title>Create Lists Libraries from Schema as XML using CSOM</title>
      <link>https://famous-cajeta-4dad83.netlify.app/create-lists-libraries-from-schema-as-xml-using-csom-comments/</link>
      <pubDate>Sat, 22 Oct 2016 09:48:35 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/create-lists-libraries-from-schema-as-xml-using-csom-comments/</guid>
      <description>Export Lists Schema to XML using CSOM and PnP | reshmeeauckloo - Oct 6, 2016
[…] To create lists/libraries using the XML config file, refer to post Create Lists Libraries from Schema as XML using CSOM […]</description>
    </item>
    
    <item>
      <title>Create Lists Libraries from Schema as XML using CSOM</title>
      <link>https://famous-cajeta-4dad83.netlify.app/create-lists-libraries-from-schema-as-xml-using-csom/</link>
      <pubDate>Sat, 22 Oct 2016 09:48:35 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/create-lists-libraries-from-schema-as-xml-using-csom/</guid>
      <description>Following on my article Export List Schema XML to a configuration file, I went on to create lists and libraries with same metadata on a new SharePoint environment. Although CSOM allows to create a list by update the property SchemaXML using CSOM iterating through the list schema in the config file. However I kept getting &amp;ldquo;Invalid list template&amp;rdquo;. The exported list&amp;rsquo;s Schema XML needs to be modified to remove unnecessary tags so as it can be used to update property SchemaXML as per article &amp;ldquo;How to create List and libraries with CustomSchemaXml property using SchemaXml with CSOM in SharePoint online2010?</description>
    </item>
    
    <item>
      <title>Export Lists Schema to XML using CSOM and PnP</title>
      <link>https://famous-cajeta-4dad83.netlify.app/export-lists-schema-to-xml-using-csom-and-pnp-comments/</link>
      <pubDate>Sat, 22 Oct 2016 09:36:01 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/export-lists-schema-to-xml-using-csom-and-pnp-comments/</guid>
      <description>Create Lists Libraries from Schema as XML using CSOM | reshmeeauckloo - Oct 6, 2016
[…] ← Export Lists Schema to XML using CSOM and PnP […]</description>
    </item>
    
    <item>
      <title>Export Lists Schema to XML using CSOM and PnP</title>
      <link>https://famous-cajeta-4dad83.netlify.app/export-lists-schema-to-xml-using-csom-and-pnp/</link>
      <pubDate>Sat, 22 Oct 2016 09:36:01 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/export-lists-schema-to-xml-using-csom-and-pnp/</guid>
      <description>I had to automate deployment of lists and libraries into different environments, e.g. on premises and online. There are different elements to consider when deploying lists or libraries namely - List Properties - List Content Types - Views - Fields I could have written a configuration file in xml manually to specify the details above. Instead I have decided to configure lists and libraries from a SharePoint 2013 On Premises Dev environment and export the list schemaXML property to a XML file.</description>
    </item>
    
    <item>
      <title>Update Search Result Web Part: Query Text and Result Source</title>
      <link>https://famous-cajeta-4dad83.netlify.app/update-search-result-web-part-query-text-and-result-source/</link>
      <pubDate>Sat, 15 Oct 2016 08:17:28 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/update-search-result-web-part-query-text-and-result-source/</guid>
      <description>I had to automate update of result source and query of a search result web part in a search page as part of deployment script to move changes from DEV to TEST, UAT and PROD. The XML definition of a search result web part is Cannot import this Web Part. 4 True advanced.aspx True False True True True null False True [&amp;quot;~sitecollection/_catalogs/masterpage/Display Templates/Search/Group_Default.js&amp;quot;,&amp;quot;~sitecollection/_catalogs/masterpage/Display Templates/Search/Item_Default.js&amp;quot;,&amp;quot;~sitecollection/_catalogs/masterpage/Display Templates/Search/Item_Site.js&amp;quot;,&amp;quot;~sitecollection/_catalogs/masterpage/Display Templates/Search/Item_Word.js&amp;quot;,&amp;quot;~sitecollection/_catalogs/masterpage/Display Templates/Search/Item_PowerPoint.js&amp;quot;,&amp;quot;~sitecollection/_catalogs/masterpage/Display Templates/Search/Item_Person_CompactHorizontal.js&amp;quot;,&amp;quot;~sitecollection/_catalogs/masterpage/Display Templates/Search/Item_BestBet.js&amp;quot;,&amp;quot;~sitecollection/_catalogs/masterpage/Display Templates/Search/Item_WebPage.js&amp;quot;] 10 True True False True True Modeless Search Results True 1 True False ~sitecollection/_catalogs/masterpage/Display Templates/Search/Item_CommonItem_Body.</description>
    </item>
    
    <item>
      <title>Add Refiner to Refinement Web Part using CSOM and PowerShell</title>
      <link>https://famous-cajeta-4dad83.netlify.app/add-refiner-to-refinement-web-part-comments/</link>
      <pubDate>Wed, 05 Oct 2016 06:06:13 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/add-refiner-to-refinement-web-part-comments/</guid>
      <description>Update Search Result Web Part: Query Text and Result Source | reshmeeauckloo - Oct 6, 2016
[…] ← Add Refiner to Refinement Web Part using CSOM and PowerShell […]</description>
    </item>
    
    <item>
      <title>Add Refiner to Refinement Web Part using CSOM and PowerShell</title>
      <link>https://famous-cajeta-4dad83.netlify.app/add-refiner-to-refinement-web-part/</link>
      <pubDate>Wed, 05 Oct 2016 06:06:13 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/add-refiner-to-refinement-web-part/</guid>
      <description>The refinement web part present by default on a search results page help to narrow down search results. The inter connected web parts present in a search result page are
Search Box Web Part Search Navigation Search Results Refinement Web Part The refinement web part used refiners which are managed properties bound to crawled properties created by search crawl. The managed properties must be enabled as refiners to be able to use on the web part.</description>
    </item>
    
    <item>
      <title>Create default groups using CSOM and PowerShell after creating site collections via script</title>
      <link>https://famous-cajeta-4dad83.netlify.app/create-default-groups-using-csom-and-powershell-after-creating-site-collections-via-script/</link>
      <pubDate>Mon, 03 Oct 2016 16:13:28 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/create-default-groups-using-csom-and-powershell-after-creating-site-collections-via-script/</guid>
      <description>Whenever a site collection is created using PowerShell, the default security groups (visitors, owners and members) are not provisioned. When site collection is created via browser an additional method call is made to create the security groups which is not called while using PowerShell.
The following scripts will help create the default groups.
https://gist.github.com/reshmee011/7c4ac90cb3038d16fa1448f4c5678896 Call method CreateWebDefaultGroup passing the parameters context(clientcontext) and UniquePermissions(bool) CreateWebDefaultGroup -Context $ctx -UniquePermissions $false</description>
    </item>
    
    <item>
      <title>Provision Search Navigation Settings PnP PowerShell</title>
      <link>https://famous-cajeta-4dad83.netlify.app/provision-search-navigation-settings-pnp-powershell/</link>
      <pubDate>Fri, 30 Sep 2016 16:51:24 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/provision-search-navigation-settings-pnp-powershell/</guid>
      <description>I was investigating ways how to provision a search centre site with all the configurations automatically. I tried to package all configurations from an already configured Search Centre using &amp;ldquo;Save site as template&amp;rdquo;, however it did not work as Publishing Features are activated in a Search Centre. There are different configuration elements in a search centre site
Search Navigation Settings Custom Search Display Templates Custom Search Results Pages which can be created using the function Add-PublishingPage Configure web parts in the search results page Refinement WebPart Search Results WebPart This blog post focuses on updating the Search Navigation Settings.</description>
    </item>
    
    <item>
      <title>Export Term Set from Term Store as Sample Import file CSV</title>
      <link>https://famous-cajeta-4dad83.netlify.app/export-term-set-from-term-store-as-sample-import-file-csv/</link>
      <pubDate>Tue, 06 Sep 2016 16:28:32 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/export-term-set-from-term-store-as-sample-import-file-csv/</guid>
      <description>The Managed Metadata service provides the &amp;ldquo;Import Term Set&amp;rdquo; Out of the Box. Unfortunately it does not provide the same &amp;ldquo;Export Term Set&amp;rdquo; capability. I had a requirement to export a term set to be reviewed by the business before importing the term set to another SharePoint farm. The Sample Import File has the columns &amp;ldquo;Term Set Name&amp;rdquo;,&amp;ldquo;Term Set Description&amp;rdquo;,&amp;ldquo;LCID&amp;rdquo;,&amp;ldquo;Available for Tagging&amp;rdquo;,&amp;ldquo;Term Description&amp;rdquo;,&amp;ldquo;Level 1 Term&amp;rdquo;,&amp;ldquo;Level 2 Term&amp;rdquo;,&amp;ldquo;Level 3 Term&amp;rdquo;,&amp;ldquo;Level 4 Term&amp;rdquo;,&amp;ldquo;Level 5 Term&amp;rdquo;,&amp;ldquo;Level 6 Term&amp;rdquo; and &amp;ldquo;Level 7 Term&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Create Indexed(Queryable via Search) Web PropertyBag using PnP and PowerShell</title>
      <link>https://famous-cajeta-4dad83.netlify.app/set-a-propertybag-property-as-indexed-queryable-via-search-using-pnp-and-powershell/</link>
      <pubDate>Thu, 01 Sep 2016 16:14:19 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/set-a-propertybag-property-as-indexed-queryable-via-search-using-pnp-and-powershell/</guid>
      <description>PropertyBag set against SharePoint web object can be indexed which means a corresponding crawled property is created by Search. If search managed properties are created against the crawled property (property bag values), custom search display templates can be created to provide a site directory solution. The post by Phil Harding Set a PropertyBag Property as Indexed (Queryable via Search) using CSOM + Powershell describes how to create an indexed property on premises using the collection &amp;ldquo;IndexedPropertyKeys&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Apply Theme and Create Composed Look CSOM and PowerShell</title>
      <link>https://famous-cajeta-4dad83.netlify.app/apply-theme-and-create-composed-look-csom-and-powershell/</link>
      <pubDate>Tue, 30 Aug 2016 16:27:50 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/apply-theme-and-create-composed-look-csom-and-powershell/</guid>
      <description>There are several ways a theme can be applied to a SharePoint site. I tried the PnP command SetSPOTheme as follows on SharePoint 2013 On Premises instance. Set-SPOTheme -ColorPaletteUrl $PathThemeColor -FontSchemeUrl $PathThemeFont Unfortunately I was getting message &amp;lsquo;Field or property &amp;ldquo;AlternateCssUrl&amp;rdquo; does not exist.&amp;rsquo; The error is due not having latest patch installed. Unfortunately the latest SharePoint CU can&amp;rsquo;t be installed as we have heavily customised legacy applications migrated from SharePoint 2007 and SharePoint 2010 running in compatibility mode.</description>
    </item>
    
    <item>
      <title>Update Choice Field values using CSOM in PowerShell</title>
      <link>https://famous-cajeta-4dad83.netlify.app/update-choice-field-values-using-csom-in-powershell-comments/</link>
      <pubDate>Wed, 13 Jul 2016 16:55:32 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/update-choice-field-values-using-csom-in-powershell-comments/</guid>
      <description>Chris O&amp;rsquo;Connor - Oct 5, 2017
Thanks !! This was an awesome tip - and works in SharePoint Online. I have an &amp;ldquo;Events&amp;rdquo; list to clear out - and just add PUBLIC + PRIVATE. This technique worked great - thanks again. :-)
http://veerainduvasi.blogspot.co.uk/2017/01/update-exisiting-choice-column-options.html
Awesome! AND timely! Two questions: Will this work against a Sharepoint Online doc library with more than 5000 items? Can this alter an existing choice value as well as adding a new one?</description>
    </item>
    
    <item>
      <title>Update Choice Field values using CSOM in PowerShell</title>
      <link>https://famous-cajeta-4dad83.netlify.app/update-choice-field-values-using-csom-in-powershell/</link>
      <pubDate>Wed, 13 Jul 2016 16:55:32 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/update-choice-field-values-using-csom-in-powershell/</guid>
      <description>I wanted a CSOM script in PowerShell to add a new value to a choice field in SharePoint. Most of the examples I found were in CSOM Managed Code (C#) but could not find anything in PowerShell. I came up with the embedded code. The client assemblies are referenced
SharePoint Assemblies\Microsoft.SharePoint.Client.dll SharePoint Assemblies\Microsoft.SharePoint.Client.Runtime.dll I have created the function Add-ChoiceValueToField to contain the logic to add a value to a choice field.</description>
    </item>
    
    <item>
      <title>Import/Export Columns and Content Types using PnP PowerShell</title>
      <link>https://famous-cajeta-4dad83.netlify.app/importexport-columns-and-content-types-sharepointpnp2016powershell-powershell-comments/</link>
      <pubDate>Fri, 24 Jun 2016 11:52:05 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/importexport-columns-and-content-types-sharepointpnp2016powershell-powershell-comments/</guid>
      <description>reshmee011 - Oct 4, 2017
I will update the scripts at some point. Thanks for the comment.
The Imported TaxonomyFields seems not working, because of missing the second Taxonomy-Note-Field. I always get &amp;ldquo;The SPListItem being updated was not retrieved with all taxonomy fields&amp;rdquo; in Edit-Form of the imported Managed Metadata Columns. I have observed this. http://blog.bugrapostaci.com/2015/07/03/the-splistitem-being-updated-was-not-retrieved-with-all-taxonomy-fields/
Actually you must use the new PnP-PowerShell-Namespace in the PowerShell-Commands. Example: Connect-PnPOnline instead of Connect-SPOnline and so on&amp;hellip;</description>
    </item>
    
    <item>
      <title>Import/Export Columns and Content Types using PnP PowerShell</title>
      <link>https://famous-cajeta-4dad83.netlify.app/importexport-columns-and-content-types-sharepointpnp2016powershell-powershell/</link>
      <pubDate>Fri, 24 Jun 2016 11:52:05 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/importexport-columns-and-content-types-sharepointpnp2016powershell-powershell/</guid>
      <description>It is useful to migrate Site Columns and Content Types from one Site Collection to another under the following scenarios maintaining the original GUIDS.
SharePoint On Premise environment to SharePoint Online Within SharePoint Online, migrate to another tenant If Content Hub Feature is not used, migrate the contents to another site collection Keep a list for governance/change tracking purpose, i.e. checking in TFS This article covers export/import of site columns and content types using SharePointPnP2016PowerShell commands which needs to be installed to be able to use the relevant commands.</description>
    </item>
    
    <item>
      <title>CSOM in PowerShell Query All Unique Permissions</title>
      <link>https://famous-cajeta-4dad83.netlify.app/csom-query-all-unique-permissions/</link>
      <pubDate>Wed, 22 Jun 2016 20:45:10 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/csom-query-all-unique-permissions/</guid>
      <description>I was looking for a script to export all unique permissions/broken permissions for sites, lists or document libraries and Pages items.From a quick Google search, I stumbled upon SharePoint 2010: Export All Unique Permissions from Site Collection using PowerShell. The script would have worked on SharePoint 2013 given it was run directly from the SharePoint server using Server Side Code. I was site collection administrator without access to any SharePoint Servers.</description>
    </item>
    
    <item>
      <title>Duplicate Rule Detection Export and publish in CRM Dynamics 2015</title>
      <link>https://famous-cajeta-4dad83.netlify.app/duplicate-rule-detection-export-and-publish-in-crm-dynamics-2015/</link>
      <pubDate>Tue, 05 Apr 2016 16:40:37 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/duplicate-rule-detection-export-and-publish-in-crm-dynamics-2015/</guid>
      <description>I have set up custom duplicate rule detection on some entities&amp;rsquo; fields on a DEV CRM 2015 instance. I needed to export the settings to be able to import into other environments. I used the link Export Duplicate Detection Rules from one organization and import to another organization in CRM 2013 to export the rules. However the CRMDataMigrationUtility.exe SDK tool exports only unpublished duplicate detection rules which I had to do to be able to export the settings.</description>
    </item>
    
    <item>
      <title>PowerShell break inheritance on SharePoint Library and change permissions of Group</title>
      <link>https://famous-cajeta-4dad83.netlify.app/powershell-break-inheritance-on-sharepoint-library-and-change-permissions-of-group/</link>
      <pubDate>Wed, 16 Mar 2016 08:58:35 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/powershell-break-inheritance-on-sharepoint-library-and-change-permissions-of-group/</guid>
      <description>I had a requirement to change group members security group which has contribute permissions at the site collection to have read permissions to one document library. The trick is to break inheritance on the document library and amend the role of the security group to Read. $web =Get-SPWeb -Identity $webUrl $docLibrary=$web.Lists.TryGetList($LibraryName) $docLibrary.BreakRoleInheritance($False) #get role definition from web: Full Control or Contribute or Read $roleDefinitions = &amp;quot;Read&amp;quot; #get site group $siteGroup = $web.</description>
    </item>
    
    <item>
      <title>Set TimeOut when importing large CRM Dynamics customisation file</title>
      <link>https://famous-cajeta-4dad83.netlify.app/set-timeout-when-importing-large-crm-dynamics-customisation-file/</link>
      <pubDate>Mon, 14 Mar 2016 22:57:16 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/set-timeout-when-importing-large-crm-dynamics-customisation-file/</guid>
      <description>Recently while trying to deploy a CRM package into system test environment using the import-crmpackage command via PowerShell, time-out was occurring despite doubling the RAM memory as well as removing a lot of checkpoints from the machine. On the DEV environment, the deployment was taking around 20 mins. The DEV machine has more resources allocated explaining why the time-out was not spotted. To resolve the timeout issue, the lengthy instructions from Microsoft Knowledge Base Article can be followed.</description>
    </item>
    
    <item>
      <title>SharePoint 2013: How to increase the file upload limit for CSOM from 2 Mb to 20 Mb</title>
      <link>https://famous-cajeta-4dad83.netlify.app/sharepoint-2013-how-to-increase-the-file-upload-limit-for-csom-from-2-mb-to-20-mb-comments/</link>
      <pubDate>Tue, 23 Feb 2016 21:26:24 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/sharepoint-2013-how-to-increase-the-file-upload-limit-for-csom-from-2-mb-to-20-mb-comments/</guid>
      <description>FLEURY Romain (@radjkill) - Mar 2, 2016
Great !!</description>
    </item>
    
    <item>
      <title>SharePoint 2013: How to increase the file upload limit for CSOM from 2 Mb to 20 Mb</title>
      <link>https://famous-cajeta-4dad83.netlify.app/sharepoint-2013-how-to-increase-the-file-upload-limit-for-csom-from-2-mb-to-20-mb/</link>
      <pubDate>Tue, 23 Feb 2016 21:26:24 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/sharepoint-2013-how-to-increase-the-file-upload-limit-for-csom-from-2-mb-to-20-mb/</guid>
      <description>In SharePoint 2013, the default file size limit set in Central Administration is for uploading single file manually in SharePoint libraries or using server side code. When I was trying to upload a file more than 2 MB using CSOM, the following error was thrown The request message is too large. The server does not allow messages that are larger than 2097152 bytes. I tried the fix mentioned in the post http://sharepoint.</description>
    </item>
    
    <item>
      <title>PowerShell Script to Remove Theme from Sub Sites</title>
      <link>https://famous-cajeta-4dad83.netlify.app/powershell-script-to-remove-theme-from-sub-sites/</link>
      <pubDate>Fri, 15 Jan 2016 16:48:56 +0000</pubDate>
      
      <guid>https://famous-cajeta-4dad83.netlify.app/powershell-script-to-remove-theme-from-sub-sites/</guid>
      <description>I had a requirement to apply a custom css file to a SharePoint collection on which there was a custom composed look with background image applied. I used the composed look option to reset the theme to a default without background image on the main site collection URL. Unfortunately sub sites were still displaying the background image. I tried setting the theme of the Sub Site using function ApplyTo or ApplyTheme without luck.</description>
    </item>
    
  </channel>
</rss>
