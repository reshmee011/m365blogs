<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SQL Server on Reshmee Auckloo</title><link>https://reshmee.netlify.app/tags/sql-server/</link><description>Recent content in SQL Server on Reshmee Auckloo</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><lastBuildDate>Wed, 08 Mar 2017 22:39:41 +0000</lastBuildDate><atom:link href="https://reshmee.netlify.app/tags/sql-server/index.xml" rel="self" type="application/rss+xml"/><item><title>SQL script batch execution using sqlcmd in PowerShell</title><link>https://reshmee.netlify.app/posts/sql-script-batch-execution-using-sqlcmd-in-powershell-comments/</link><pubDate>Wed, 08 Mar 2017 22:39:41 +0000</pubDate><guid>https://reshmee.netlify.app/posts/sql-script-batch-execution-using-sqlcmd-in-powershell-comments/</guid><description>reshmee011 - May 1, 2017
Definitely you can without a manifest file. If you want the scripts to run in some order, you can append a numerical number to the script file. Let me know if you need a sample code.
This example is great. Really helped me understand a few more things about PowerShell. But is it possible to do the same thing without using a manifest file (i.</description></item><item><title>SQL script batch execution using sqlcmd in PowerShell</title><link>https://reshmee.netlify.app/posts/sql-script-batch-execution-using-sqlcmd-in-powershell/</link><pubDate>Wed, 08 Mar 2017 22:39:41 +0000</pubDate><guid>https://reshmee.netlify.app/posts/sql-script-batch-execution-using-sqlcmd-in-powershell/</guid><description>There is often a mismatch between needs of the development team (multiple discreet T-SQL files for separate concerns) and the release team (the requirement for one step automated deployment) . The script bridges the requirement by using sqlcmd.exe to run a batch of SQL scripts. A text file is used listing all sql files that need to run in a particular order to avoid errors which may occur if there are dependencies between the scripts.</description></item><item><title>Create Dev/Test SharePoint 2013 environment in Azure</title><link>https://reshmee.netlify.app/posts/create-devtest-sharepoint-2013-environment-in-azure-comments/</link><pubDate>Tue, 06 Dec 2016 11:49:22 +0000</pubDate><guid>https://reshmee.netlify.app/posts/create-devtest-sharepoint-2013-environment-in-azure-comments/</guid><description>Create Dev/Test SharePoint 2013 environment in Azure — reshmeeauckloo – SutoCom Solutions - Dec 2, 2016
[…] via Create Dev/Test SharePoint 2013 environment in Azure — reshmeeauckloo […]</description></item><item><title>Create Dev/Test SharePoint 2013 environment in Azure</title><link>https://reshmee.netlify.app/posts/create-devtest-sharepoint-2013-environment-in-azure/</link><pubDate>Tue, 06 Dec 2016 11:49:22 +0000</pubDate><guid>https://reshmee.netlify.app/posts/create-devtest-sharepoint-2013-environment-in-azure/</guid><description>Azure has a trial image to build either SharePoint 2013 HA farm or SharePoint 2013 Non-HA farm.
When trying to create SharePoint 2013 Non-HA farm, I was stuck at step &amp;ldquo;Choose storage account type&amp;rdquo; with the message &amp;ldquo;Loading pricing&amp;hellip;&amp;rdquo;.
Following SharePoint Server 2016 dev/test environment in Azure, I managed to created a SharePoint 2013 environment in Azure running PowerShell commands.
There are three major phases to setting up this dev/test environment:</description></item></channel></rss>