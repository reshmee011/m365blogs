<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Search on Reshmee Auckloo</title><link>https://reshmee.netlify.app/tags/search/</link><description>Recent content in Search on Reshmee Auckloo</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><lastBuildDate>Sat, 15 Oct 2016 08:17:28 +0000</lastBuildDate><atom:link href="https://reshmee.netlify.app/tags/search/index.xml" rel="self" type="application/rss+xml"/><item><title>Update Search Result Web Part: Query Text and Result Source</title><link>https://reshmee.netlify.app/posts/update-search-result-web-part-query-text-and-result-source/</link><pubDate>Sat, 15 Oct 2016 08:17:28 +0000</pubDate><guid>https://reshmee.netlify.app/posts/update-search-result-web-part-query-text-and-result-source/</guid><description>I had to automate update of result source and query of a search result web part in a search page as part of deployment script to move changes from DEV to TEST, UAT and PROD. The XML definition of a search result web part is Cannot import this Web Part. 4 True advanced.aspx True False True True True null False True [&amp;quot;~sitecollection/_catalogs/masterpage/Display Templates/Search/Group_Default.js&amp;quot;,&amp;quot;~sitecollection/_catalogs/masterpage/Display Templates/Search/Item_Default.js&amp;quot;,&amp;quot;~sitecollection/_catalogs/masterpage/Display Templates/Search/Item_Site.js&amp;quot;,&amp;quot;~sitecollection/_catalogs/masterpage/Display Templates/Search/Item_Word.js&amp;quot;,&amp;quot;~sitecollection/_catalogs/masterpage/Display Templates/Search/Item_PowerPoint.js&amp;quot;,&amp;quot;~sitecollection/_catalogs/masterpage/Display Templates/Search/Item_Person_CompactHorizontal.js&amp;quot;,&amp;quot;~sitecollection/_catalogs/masterpage/Display Templates/Search/Item_BestBet.js&amp;quot;,&amp;quot;~sitecollection/_catalogs/masterpage/Display Templates/Search/Item_WebPage.js&amp;quot;] 10 True True False True True Modeless Search Results True 1 True False ~sitecollection/_catalogs/masterpage/Display Templates/Search/Item_CommonItem_Body.</description></item><item><title>Add Refiner to Refinement Web Part using CSOM and PowerShell</title><link>https://reshmee.netlify.app/posts/add-refiner-to-refinement-web-part/</link><pubDate>Wed, 05 Oct 2016 06:06:13 +0000</pubDate><guid>https://reshmee.netlify.app/posts/add-refiner-to-refinement-web-part/</guid><description>The refinement web part present by default on a search results page help to narrow down search results. The inter connected web parts present in a search result page are
Search Box Web Part Search Navigation Search Results Refinement Web Part The refinement web part used refiners which are managed properties bound to crawled properties created by search crawl. The managed properties must be enabled as refiners to be able to use on the web part.</description></item><item><title>Search Display Template js file not created when HTML file for Item_ThreeLines is created</title><link>https://reshmee.netlify.app/posts/search-display-template-js-file-not-created-when-html-file-for-item_threelines-is-created/</link><pubDate>Mon, 14 Mar 2016 23:41:15 +0000</pubDate><guid>https://reshmee.netlify.app/posts/search-display-template-js-file-not-created-when-html-file-for-item_threelines-is-created/</guid><description>On a SharePoint Online site collection where Publishing feature was initially turned on and subsequently turned off, js file was not automatically created/updated whenever a display template was created/edited. We wanted to have a search content web part with three lines instead of two lines. We created a new display template by following the steps below.
Navigate to Site Settings&amp;gt;Master Pages&amp;gt;Display Templates&amp;gt;Content Web Parts. Download the file Item_TwoLines.html Rename it to Item_ThreeLines.</description></item><item><title>Date Crawled properties Search SharePoint Online KQL Optional Date Filter if Date is null</title><link>https://reshmee.netlify.app/posts/date-crawled-properties-search-sharepoint-online-fql-optional-date-filter-if-date-is-null-comments/</link><pubDate>Mon, 23 Nov 2015 22:49:14 +0000</pubDate><guid>https://reshmee.netlify.app/posts/date-crawled-properties-search-sharepoint-online-fql-optional-date-filter-if-date-is-null-comments/</guid><description>Date Crawled properties Search SharePoint Online FQL Optional Date Filter if Date is null | reshmeeauckloo - Nov 1, 2015
[…] ← Date Crawled properties Search SharePoint Online FQL Optional Date Filter if Date is nul… […]</description></item><item><title>Date Crawled properties Search SharePoint Online KQL Optional Date Filter if Date is null</title><link>https://reshmee.netlify.app/posts/date-crawled-properties-search-sharepoint-online-fql-optional-date-filter-if-date-is-null/</link><pubDate>Mon, 23 Nov 2015 22:49:14 +0000</pubDate><guid>https://reshmee.netlify.app/posts/date-crawled-properties-search-sharepoint-online-fql-optional-date-filter-if-date-is-null/</guid><description>Crawled date fields from SharePoint Online are mapped to string properties which make it hard to apply a date filter on search results. If the filter EndDateOWSDATE is used in a Content Search Web Part, it won&amp;rsquo;t work as the mapped property EndDateOWSDATE is of type text -EndDateOWSDATE :1900-01-01..{Today} Instead the crawled property ows_EndDate can be mapped to any out of box refinable date properties, i.e. RefinableDate00 and the filter will work.</description></item><item><title>KQL SharePoint Online filtering on user profile multi values managed metadata properties</title><link>https://reshmee.netlify.app/posts/kql-sharepoint-online-filtering-on-user-profile-multi-values-managed-metadata-properties/</link><pubDate>Thu, 19 Nov 2015 23:15:28 +0000</pubDate><guid>https://reshmee.netlify.app/posts/kql-sharepoint-online-filtering-on-user-profile-multi-values-managed-metadata-properties/</guid><description>Keyword Query Language (KQL) is a powerful way to query search results in SharePoint Online. It is possible to filter data based on the user profile property ,e.g. owstaxidJobTitle:{User.SPS-JobTitle} The above is a valid property restriction which will return all items having the managed metadata field JobTitle equal to the user profile property JobTitle of the logged in user. When managed metadata field is crawled, two crawled properties are created in the format of ows_taxid_ and ows_.</description></item></channel></rss>