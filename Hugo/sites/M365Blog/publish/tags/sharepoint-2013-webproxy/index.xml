<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SharePoint 2013 WebProxy on Reshmee Auckloo</title><link>https://reshmee.netlify.app/tags/sharepoint-2013-webproxy/</link><description>Recent content in SharePoint 2013 WebProxy on Reshmee Auckloo</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><lastBuildDate>Fri, 04 Dec 2015 00:01:11 +0000</lastBuildDate><atom:link href="https://reshmee.netlify.app/tags/sharepoint-2013-webproxy/index.xml" rel="self" type="application/rss+xml"/><item><title>SharePoint 2013/Online CSOM REST Web Proxy</title><link>https://reshmee.netlify.app/posts/sharepoint-2013-csom-rest-web-proxy-comments/</link><pubDate>Fri, 04 Dec 2015 00:01:11 +0000</pubDate><guid>https://reshmee.netlify.app/posts/sharepoint-2013-csom-rest-web-proxy-comments/</guid><description>parthrawal - Jun 5, 2016
can you please share the code for POST method!? i have currently JS in content editor webpart and want to use the same. can i!?
Could you please share code snippet for post data</description></item><item><title>SharePoint 2013/Online CSOM REST Web Proxy</title><link>https://reshmee.netlify.app/posts/sharepoint-2013-csom-rest-web-proxy/</link><pubDate>Fri, 04 Dec 2015 00:01:11 +0000</pubDate><guid>https://reshmee.netlify.app/posts/sharepoint-2013-csom-rest-web-proxy/</guid><description>Web Proxy SP.WebProxy is used to make requests to external services by SharePoint. SharePoint Add-ins must register target site as remote endpoint in app manifest. If the URL is http://services.odata.org/v4/Northwind/Northwind.svc/Categories?$format=json, the endpoint is http://services.odata.org. However the response size must not exceed 200 kb. CSOM var context = SP.ClientContext.get_current(); var request = new SP.WebRequestInfo(); request.set_url(&amp;quot;http://services.odata.org/v4/Northwind/Northwind.svc/Categories?$format=json&amp;quot;); request.set_method(&amp;quot;GET&amp;quot;); var response = SP.WebProxy.invoke(context,request); context.executeQueryAsync(success, fail); function success(){ if(response.get_statusCode() == 200 { var data = JSON.</description></item></channel></rss>