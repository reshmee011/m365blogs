<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SharePoint add-in on Reshmee Auckloo</title><link>https://reshmee.netlify.app/tags/sharepoint-add-in/</link><description>Recent content in SharePoint add-in on Reshmee Auckloo</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><lastBuildDate>Wed, 13 Jul 2016 16:55:32 +0000</lastBuildDate><atom:link href="https://reshmee.netlify.app/tags/sharepoint-add-in/index.xml" rel="self" type="application/rss+xml"/><item><title>Update Choice Field values using CSOM in PowerShell</title><link>https://reshmee.netlify.app/posts/update-choice-field-values-using-csom-in-powershell/</link><pubDate>Wed, 13 Jul 2016 16:55:32 +0000</pubDate><guid>https://reshmee.netlify.app/posts/update-choice-field-values-using-csom-in-powershell/</guid><description>I wanted a CSOM script in PowerShell to add a new value to a choice field in SharePoint. Most of the examples I found were in CSOM Managed Code (C#) but could not find anything in PowerShell. I came up with the embedded code. The client assemblies are referenced
SharePoint Assemblies\Microsoft.SharePoint.Client.dll SharePoint Assemblies\Microsoft.SharePoint.Client.Runtime.dll I have created the function Add-ChoiceValueToField to contain the logic to add a value to a choice field.</description></item><item><title>SharePoint JSOM to update Document ID Settings</title><link>https://reshmee.netlify.app/posts/sharepoint-jsom-to-update-document-id-settings/</link><pubDate>Fri, 15 Apr 2016 05:42:48 +0000</pubDate><guid>https://reshmee.netlify.app/posts/sharepoint-jsom-to-update-document-id-settings/</guid><description>The Document ID Service feature is useful to tag unique Id to documents across site collection to make it easier to retrieve. A prefix can be specified to use when the unique Id is generated. The document id settings is stored in the web property bag &amp;ldquo;docid_settings_ui&amp;rdquo; after the feature the activated. The web property bag can be updated using JSOM to assign a prefix with XML snippet like below. var docIdValue = &amp;lsquo; &amp;rsquo; + docIDPrefix + &amp;lsquo; true&amp;rsquo; webProperties.</description></item><item><title>SharePoint Get list items and Effective Permissions on a list via REST API from SharePoint Add-in</title><link>https://reshmee.netlify.app/posts/sharepoint-get-list-items-and-effective-permissions-on-a-list-via-rest-api-from-sharepoint-add-in-comments/</link><pubDate>Mon, 16 Nov 2015 09:41:59 +0000</pubDate><guid>https://reshmee.netlify.app/posts/sharepoint-get-list-items-and-effective-permissions-on-a-list-via-rest-api-from-sharepoint-add-in-comments/</guid><description>Ofer Gal - Mar 3, 2017
I get error: Uncaught (in promise) TypeError: SP.BasePermissions is not a constructor What else should I load?
Sp.js needs to be loaded. Add the following to your page. /_layouts/15/sp.runtime.js /_layouts/15/sp.js</description></item><item><title>SharePoint Get list items and Effective Permissions on a list via REST API from SharePoint Add-in</title><link>https://reshmee.netlify.app/posts/sharepoint-get-list-items-and-effective-permissions-on-a-list-via-rest-api-from-sharepoint-add-in/</link><pubDate>Mon, 16 Nov 2015 09:41:59 +0000</pubDate><guid>https://reshmee.netlify.app/posts/sharepoint-get-list-items-and-effective-permissions-on-a-list-via-rest-api-from-sharepoint-add-in/</guid><description>The requirement was to build a SharePoint hosted Add-in to allow logged user to create/edit list item from any site from the site collection. The permissions of the user to be able to create/edit an item against the list needed to be checked. The following script gets list items with effective permissions against the list using jQuery promises from the SharePoint hosted Add-in function getListItemsAndPermissions(webUrl, listTitle) { var appWebUrl = decodeURIComponent(getQueryStringParameter(&amp;quot;SPAppWebUrl&amp;quot;)); var deferredPermissions = $.</description></item></channel></rss>