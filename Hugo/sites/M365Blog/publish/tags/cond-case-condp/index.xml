<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cond case condp on Reshmee Auckloo</title><link>https://reshmee.netlify.app/tags/cond-case-condp/</link><description>Recent content in cond case condp on Reshmee Auckloo</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><lastBuildDate>Sun, 13 Dec 2015 21:33:00 +0000</lastBuildDate><atom:link href="https://reshmee.netlify.app/tags/cond-case-condp/index.xml" rel="self" type="application/rss+xml"/><item><title>Clojure If, cond, case</title><link>https://reshmee.netlify.app/posts/clojure-if-cond-case-comments/</link><pubDate>Sun, 13 Dec 2015 21:33:00 +0000</pubDate><guid>https://reshmee.netlify.app/posts/clojure-if-cond-case-comments/</guid><description>reshmee011 - Dec 1, 2015
@Timothy: Thanks for the clarification. I have updated the post.
You might consider these conditional macros, too: when-let, cond-&amp;gt;, cond-&amp;raquo; and maybe some-&amp;gt;
Alsobe aware that case tests for identity, not for equality.
Hi Timothy Thanks for your feedback. I agree that empty collections are truthy as in the example you provided. However empty sequences are falsey (if (seq []):truthy :falsey); ;;=&amp;gt; falsey
(seq []) is falsey because it converts an empty sequence (which is truthy) to nil (which is falsey).</description></item><item><title>Clojure If, cond, case</title><link>https://reshmee.netlify.app/posts/clojure-if-cond-case/</link><pubDate>Sun, 13 Dec 2015 21:33:00 +0000</pubDate><guid>https://reshmee.netlify.app/posts/clojure-if-cond-case/</guid><description>Clojure has lots of operators for dealing with conditional statements: if, cond, condp, case and when. Each of these is useful for different situations. Let&amp;rsquo;s take a look at them in turn: if if expression in Clojure returns a value similar to ternary operator in c# compared to a statement The ternary expression in C# using the ? operator as follows remark = (rating&amp;gt;10) ? &amp;quot;positive&amp;quot;:&amp;quot;negative&amp;quot; The expression is evaluated, if it is true the &amp;ldquo;then&amp;rdquo; part is executed and result returned otherwise the &amp;ldquo;else&amp;rdquo; part is run and returned.</description></item></channel></rss>